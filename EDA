#EDA PERFORMED:
print("\nDataset Info:")
train.info()
Dataset Info:
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 39211 entries, 0 to 39210
Data columns (total 18 columns):
 #   Column     Non-Null Count  Dtype 
---  ------     --------------  ----- 
 0   age        39211 non-null  int64 
 1   job        38982 non-null  object
 2   marital    39211 non-null  object
 3   education  37744 non-null  object
 4   default    39211 non-null  object
 5   balance    39211 non-null  int64 
 6   housing    39211 non-null  object
 7   loan       39211 non-null  object
 8   contact    28875 non-null  object
 9   duration   39211 non-null  int64 
 10  campaign   39211 non-null  int64 
 11  pdays      39211 non-null  int64 
 12  previous   39211 non-null  int64 
 13  poutcome   9760 non-null   object
 14  target     39211 non-null  object
 15  year       39211 non-null  int32 
 16  month      39211 non-null  int32 
 17  weekday    39211 non-null  int32 
dtypes: int32(3), int64(6), object(9)
memory usage: 4.9+ MB
print("\nDataset Description:")
print(train.describe())
Dataset Description:
                age        balance      duration      campaign         pdays  \
count  39211.000000   39211.000000  39211.000000  39211.000000  39211.000000   
mean      42.120247    5441.781719    439.062789      5.108770     72.256051   
std       12.709352   16365.292065    769.096291      9.890153    160.942593   
min       18.000000   -8019.000000      0.000000      1.000000     -1.000000   
25%       33.000000      98.000000    109.000000      1.000000     -1.000000   
50%       40.000000     549.000000    197.000000      2.000000     -1.000000   
75%       50.000000    2030.000000    380.000000      4.000000     -1.000000   
max       95.000000  102127.000000   4918.000000     63.000000    871.000000   

           previous          year         month       weekday  
count  39211.000000  39211.000000  39211.000000  39211.000000  
mean      11.826171   2009.000791      6.223993      2.822575  
std       44.140259      0.818415      2.614273      1.741966  
min        0.000000   2008.000000      1.000000      0.000000  
25%        0.000000   2008.000000      5.000000      1.000000  
50%        0.000000   2009.000000      6.000000      3.000000  
75%        0.000000   2010.000000      8.000000      4.000000  
max      275.000000   2010.000000     12.000000      6.000000  
#missing values
print("\nMissing Values:")
missing_values = train.isnull().sum()
print(missing_values[missing_values > 0])
Missing Values:
job            229
education     1467
contact      10336
poutcome     29451
dtype: int64
# Target distribution
plt.figure(figsize=(2,1))
sns.countplot(data=train, x='target', palette='pastel')
plt.title('Target Variable Distribution')
plt.show()

#correlation matrix
corr_matrix = train.select_dtypes(include=[np.number]).corr()
plt.figure(figsize=(5, 4))
sns.heatmap(corr_matrix, annot=True, cmap='coolwarm', fmt='.2f')
plt.title("Correlation Matrix")
plt.show()

# Age distribution
plt.figure(figsize=(4, 2))
sns.histplot(train['age'], bins=30, kde=True, color='skyblue')
plt.title('Age Distribution')
plt.show()
/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

# Job distribution
plt.figure(figsize=(6, 3))
sns.countplot(data=train, y='job', order=train['job'].value_counts().index, palette='viridis')
plt.title('Job Distribution')
plt.show()

# Education and target relationship
plt.figure(figsize=(4, 2))
sns.countplot(data=train, x='education', hue='target', palette='pastel')
plt.title('Education vs Target')
plt.show()

# Balance distribution
plt.figure(figsize=(6, 3))
sns.histplot(train['balance'], bins=30, kde=True, color='lightgreen')
plt.title("Balance Distribution")
plt.xlabel("Balance")
plt.ylabel("Frequency")
plt.show()
/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

# Campaign feature vs target
plt.figure(figsize=(4, 2))
sns.boxplot(data=train, x='target', y='campaign', palette='cool')
plt.title('Campaign vs Target')
plt.show()

# Duration vs Target
plt.figure(figsize=(5, 3))
sns.boxplot(data=train, x='target', y='duration', palette='pastel')
plt.title('Duration of Contact vs Target')
plt.show()

#categorical features
categorical_cols = ['marital', 'education', 'housing', 'loan', 'default', 'contact', 'job', 'poutcome']
for col in categorical_cols:
    plt.figure(figsize=(6, 3))
    sns.countplot(data=train, x=col, hue='target', palette='pastel')
    plt.title(f"{col} Distribution by Target")
    plt.xticks(rotation=45)
    plt.show()








# Analyzing pdays
plt.figure(figsize=(4, 2))
sns.histplot(train['pdays'], bins=20, kde=True, color='orange')
plt.title('Pdays Distribution')
plt.show()
/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

# Outlier detection in balance
plt.figure(figsize=(4, 2))
sns.boxplot(data=train, y='balance', palette='coolwarm')
plt.title('Balance Outlier Detection')
plt.show()

# Duration vs campaign interaction
plt.figure(figsize=(5, 3))
sns.scatterplot(data=train, x='campaign', y='duration', hue='target', palette='Set1', alpha=0.7)
plt.title('Campaign vs Duration with Target')
plt.show()

# Age vs balance interaction
plt.figure(figsize=(5, 3))
sns.scatterplot(data=train, x='age', y='balance', hue='target', palette='Set2', alpha=0.7)
plt.title('Age vs Balance with Target')
plt.show()

# Missing value visualization
plt.figure(figsize=(12, 6))
sns.heatmap(train.isnull(), cbar=False, cmap='viridis')
plt.title("Missing Values Heatmap")
plt.show()
